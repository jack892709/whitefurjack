#!/usr/bin/env bash
PWD=$(pwd)

displayUsage() {
    echo "Usage:" >&2
    echo "##### Note below should be run outside container, aka before ${0} devcontainer bash" >&2
    echo "${0} devcontainer   # Devcontainer operations" >&2
    echo "##### Note below should be run inside container, aka after ${0} devcontainer bash" >&2
    echo "${0} init                                 # Init project" >&2
    echo "${0} update                               # Update project dependencies" >&2
    echo "${0} watch                                # Start FE dev server" >&2
    echo "${0} vue                                  # Execute vue cli" >&2
    echo "${0} npm                                  # Execute npm" >&2
    echo "${0} test-fe [unit|e2e]                   # Run frontend test" >&2
}

init() {
    if [ -f .env ]; then
        echo "There is .env, skip"
    else
        pushd frontend >/dev/null || exit
        cp .env.example .env
        npm install
        popd >/dev/null || exit
    fi
}

update() {
    # pushd frontend >/dev/null || exit
    npm install
    # popd >/dev/null || exit

    # git submodule update --init
}

devcontainer() {
    pushd $PWD/.devcontainer >/dev/null
    case ${1} in
        start)
            docker-compose up -d
            ;;
        stop)
            docker-compose down
            ;;
        ps)
            docker-compose ps
            ;;
        bash)
            docker-compose exec service-vue bash
            ;;
        rebuild)
            docker-compose down
            docker-compose up --build -d
            ;;
        print)
            if [ $# -lt 2 ]; then
                echo "Host required, e.g." >&2
                echo "${0} devcontainer print localhost" >&2
                exit
            fi
            source .env
            echo "http://${2}:${FE_DEV_PORT}/                   # frontend SPA, need to ./oconf watch first"
            ;;
        **)
            echo "${0} devcontainer start         # start containers with docker compose" >&2
            echo "${0} devcontainer stop          # stop containers with docker compose" >&2
            echo "${0} devcontainer ps            # services started with docker compose" >&2
            echo "${0} devcontainer bash          # start a bash inside container" >&2
            echo "${0} devcontainer rebuild       # rebuild all services" >&2
            echo "${0} devcontainer print [host]  # print all avail urls" >&2
            ;;
    esac
    popd >/dev/null
}

case ${1} in
    init)
        init
        ;;
    update)
        update
        ;;
    devcontainer)
        devcontainer "${@:2}"
        ;;
    watch)
        npm run serve
        # pushd frontend >/dev/null || exit
        # yarn quasar dev
        # popd >/dev/null || exit
        ;;
    vue)
        # pushd frontend >/dev/null || exit
        npm vue ${@:2}
        # popd >/dev/null || exit
        ;;
    npm)
        # pushd frontend >/dev/null || exit
        npm ${@:2}
        # popd >/dev/null || exit
        ;;
    **)
        displayUsage
        ;;
esac
